import streamlit as st
from apiClient import ApiClient

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ API
client = ApiClient(base_url='http://127.0.0.1:8001')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç", page_icon="üí∞", layout="wide")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session state
if "messages" not in st.session_state:
    st.session_state.messages = {}
if "current_chat" not in st.session_state:
    st.session_state.current_chat = "–û—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç"
if "chats" not in st.session_state:
    st.session_state.chats = ["–û—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç"]

# –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è CSS
st.markdown(
    """
    <style>
        .sidebar .sidebar-content {
            background-color: #f7f8fa;
        }
        .main-container {
            background-color: #ffffff;
            border: 1px solid #e3e6eb;
            border-radius: 10px;
            padding: 15px;
        }
        .chat-message {
            margin-bottom: 10px;
        }
        .chat-user {
            background-color: #e6f7ff;
            border-radius: 10px;
            padding: 10px;
            text-align: left;
        }
        .chat-assistant {
            background-color: #fff7e6;
            border-radius: 10px;
            padding: 10px;
            text-align: left;
        }
    </style>
    """,
    unsafe_allow_html=True
)

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å
with st.sidebar:
    st.title("üìà –í–∞—à –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç")
    st.write("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ.")

    if st.button("‚ú® –ù–æ–≤—ã–π —á–∞—Ç"):
        new_chat = f"–ß–∞—Ç {len(st.session_state.chats) + 1}"
        st.session_state.chats.append(new_chat)
        st.session_state.messages[new_chat] = []
        st.session_state.current_chat = new_chat

    st.write("### –í–∞—à–∏ —á–∞—Ç—ã:")
    for chat in st.session_state.chats:
        if st.sidebar.button(chat, key=chat, use_container_width=True):
            st.session_state.current_chat = chat

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞
if st.session_state.current_chat not in st.session_state.messages:
    st.session_state.messages[st.session_state.current_chat] = []

# –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å
st.title(f"üí≥ {st.session_state.current_chat}")

# –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
chat_container = st.container()
with chat_container:
    for message in st.session_state.messages[st.session_state.current_chat]:
        css_class = "chat-user" if message["role"] == "user" else "chat-assistant"
        with st.container():
            st.markdown(
                f'<div class="{css_class} chat-message">{message["content"]}</div>',
                unsafe_allow_html=True
            )

# –û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
def clear_text():
    st.session_state["user_input"] = ""

# –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–¥–∏–Ω—ë–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è API
def create_prompt():
    dialog = st.session_state.messages[st.session_state.current_chat]
    prompt = """"""
    for message in dialog:
        if message["role"] == "user":
            prompt += f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message['content']}\n"
        else:
            prompt += f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç: {message['content']}\n"
    return prompt.strip()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
def on_click():
    st.session_state.messages[st.session_state.current_chat].append(
        {"role": "user", "content": st.session_state.user_input}
    )

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –¥–∏–∞–ª–æ–≥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ API
    prompt = create_prompt()

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –±–æ—Ç–∞
    bot_response = client.send_message(prompt)
    if bot_response.message in ["Error", "None"]:
        bot_response.message = bot_response.error

    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
    st.session_state.messages[st.session_state.current_chat].append(
        {"role": "assistant", "content": bot_response.message}
    )
    clear_text()

# –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∫–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
with st.container():
    st.divider()
    st.write("### –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:")
    col1, col2 = st.columns([6, 1])
    with col1:
        user_input = st.text_input(
            "–°–æ–æ–±—â–µ–Ω–∏–µ:", key="user_input", label_visibility="collapsed"
        )
    with col2:
        st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å", on_click=on_click, use_container_width=True)
